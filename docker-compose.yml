services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: fses_backend
    container_name: ${APP_CONTAINER_NAME:-fses_backend}
    working_dir: /var/www
    volumes:
      - .:/var/www
    ports:
      - "8010:9000"
    networks:
      - laravel_network
    depends_on:
      - db
      - redis
      - testing_db
    environment:
      APP_ENV: ${APP_ENV}
      APP_KEY: ${APP_KEY}
      DB_HOST: ${DB_HOST}
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PASSWORD: ${REDIS_PASSWORD}

  nginx:
    image: nginx:stable
    container_name: ${NGINX_CONTAINER_NAME:-laravel_nginx}
    volumes:
      - .:/var/www
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "${NGINX_PORT:-8080}:80"
    networks:
      - laravel_network
    depends_on:
      - app

  db:
    image: mysql:8.0
    container_name: ${DB_CONTAINER_NAME:-laravel_db}
    ports:
      - "${DB_PORT:-3306}:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - laravel_network

  testing_db:
    image: mysql:8.0
    container_name: testing_db
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: testing_db
      MYSQL_USER: test_user
      MYSQL_PASSWORD: test_user
      MYSQL_ROOT_PASSWORD: root_password
    volumes:
      - testing_dbdata:/var/lib/mysql
    networks:
      - laravel_network

  redis:
    image: redis:alpine
    container_name: ${REDIS_CONTAINER_NAME:-laravel_redis}
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - laravel_network

networks:
  laravel_network:
    driver: bridge

volumes:
  dbdata:
  testing_dbdata: